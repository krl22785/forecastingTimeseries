qplot(x, geom="histogram", binwidth = .05)
model <- lm(sqrt(passing.distance) ~ vehicles + helmet, data = bikedata)
model <- lm(sqrt(passing.distance) ~ vehicle + helmet, data = bikedata)
model
summary(model)
plot(model)
model
newdata <- data.frame(helmet="Y", vehicle = "SUV", kerb = 1.2)
newdata
predict(model, newdata)
model <- lm(sqrt(passing.distance) ~ vehicle + helmet + log(kerb), data = bikedata)
predict(model, newdata)
model <- lm(sqrt(passing.distance) ~ vehicle + helmet + kerb, data = bikedata)
predict(model, newdata)
pwd()
wd()
setwd()
setwd
ls
getwd()
data <- read.csv("http://ptrckprry.com/course/forecasting/data/bikedata.csv")
data
head(data)
summary(data)
bikedata <- read.csv("http://ptrckprry.com/course/forecasting/data/bikedata.csv")
x <- bikedata$passing.distance
x
length(x)
names(bikedata
)
x < - bikedata[['passing.distance
']]
x < - bikedata[['passing.distance']]
x < - bikedata[,'passing.distance']
x
x <- bikedata[["passing.distance"]]
x
x <- bikedata[,"passing.distance"]
x
x
x[1]
x[[1]]
x[1:10]
x[[1:10]]
```{r}
data <- read.csv("http://ptrckprry.com/course/forecasting/data/gdp.csv")
date <- as.Date(data$date)
gdp <- data$gdp
head(gdp)
head(data)
date
head(data)
plot(data$date, data$gdp)
library("ggplot")
library("ggplot2")
ggplot(data, aes(x = date, y = gdp)) + geom_line()
ggplot(data, aes(date, gdp)) + geom_line()
ggplot(data, aes(date, gdp)) + geom_line(position = pd)
ggplot(data, aes(date, gdp)) + geom_point()
ggplot(data, aes(date, gdp)) + geom_point() + geom_line()
ggplot(data, aes(date, gdp)) + geom_point() + scale_x_date(format = "%b-%Y")
ggplot(data, aes(date, gdp)) + geom_point() + scale_x_
ggplot(data, aes(date, gdp)) + geom_point() + scale_x_continuous(format = "%b-%Y")
qplot(date, gpd, data = data, geom = "line")
qplot(date, gdp, data = data, geom = "line")
data
data
qplot(date, gdp, data = data, geom = "line")
str(data)
date <- as.Date(data$date)
str(data)
mydates <- as.Date(c("2007-06-22", "2004-02-13"))
strDates <- c("01/05/1965", "08/16/1975")
dates <- as.Date(strDates, "%m/%d/%Y")
date
dates
str(dates)
date
str(date)
str(dates)
data <- read.csv("http://ptrckprry.com/course/forecasting/data/gdp.csv")
date <- as.Date(data$date)
gdp <- data$gdp
```
head(date)
yt
ggplot(data, aes(date)) + geom_line(aes(gdp))
ggplot(data, aes(date, gdp)) + geom_line(aes(gdp))
ggplot(data, aes(date, gdp)) + geom_line(aes(date, gdp))
ggplot(data, aes(date, gdp)) + geom_line()
ggplot() + geom_line(data = data, aes(x = date, y = gdp))
ggplot(data, aes(date, gdp)) + geom_line(color = 'red')
class(data$date)
ggplot(data, aes(date, gdp)) + geom_lime()
ggplot(data, aes(date, gdp)) + geom_line()
ggplot(date, aes(date, gdp)) + geom_point()
ggplot(data, aes(date, gdp)) + geom_point()
ggplot(data, aes(date, gdp)) + geom_line()
ggplot(data, aes(date, gdp)) + geom_line(group = 1)
ggplot(data, aes(date, gdp)) + geom_line(group = 1) + geom_path()
ggplot(data, aes(date, gdp)) + geom_line(group = 1) + geom_path(size = 1)
ggplot(data, aes(date, gdp)) + geom_line(linetype = 2)
ggplot(data, aes(date, gdp, group = group)) + geom_line(linetype = 2)
ggplot(data, aes(date, gdp, group = group)) + geom_line()
data
head(data)
str(date)
str(data)
ggplot(data, aes(date, gdp)) + geom_line()
ggplot(data, aes(date, gdp)) + geom_path()
str(date)
data$date <- as.Date(data$date)
ggplot(data, aes(date, gdp)) + geom_line()
data <- read.csv("http://ptrckprry.com/course/forecasting/data/gdp.csv")
date <- as.Date(data$date)
gdp <- data$gdp
ggplot() + geom_line(aes(date, gdp))
ggplot() + geom_line(aes(date, gdp)) + ylab("GDP") + xlab("Date
")
ggplot() + geom_line(aes(date, gdp)) + ylab("GDP") + xlab(NA)
ggplot() + geom_line(aes(date, gdp)) + ylab("GDP") + xlab(None)
ggplot() + geom_line(aes(date, gdp)) + ylab("GDP") + xlab("none")
ggplot() + geom_line(aes(date, gdp)) + ylab("GDP") + xlab(NULL)
ggplot() + geom_line(aes(date, gdp)) + ylab("GDP") + xlab(NULL) + labs(title = "US GDP")
ggplot() + geom_line(aes(date, gdp)) + ylab("GDP") + xlab(NULL) + labs(title = "US GDP from Q1'46 to Q1'14")
ggplot() + geom_line(aes(date, gdp)) + ylab("GDP") + xlab(NULL) + labs(title = "US GDP from Q1'46 to Q1'14")
plot(date, gdp)
plot(date, gdp, type = 'l')
plot(date, gdp, type = 'l')
ggplot() + geom_line(aes(date, gdp)) + ylab("GDP") + xlab(NULL) + labs(title = "US GDP from Q1'46 to Q1'14")
library(ggplot2)
ggplot() + geom_line(aes(date, gdp)) + ylab("GDP") + xlab(NULL) + labs(title = "US GDP from Q1'46 to Q1'14")
lin <- model(gdp ~ date)
lin <- lm(gdp ~ date)
lin
log(10)
ggplot() + geo_line(aes(date, log(gdp)))
ggplot() + geom_line(aes(date, log(gdp)))
library(ggplot2)
```{r}
ggplot() + geom_line(aes(date, log.gdp)) + ylab("Log(GDP)")
log.gdp <- log(gdp)
ggplot() + geom_line(aes(date, log.gdp)) + ylab("Log(GDP)")
ggplot() + geom_line(aes(date, log.gdp)) + ylab("Log (GDP)") + xlab(NULL) + labs(title = "US GDP from Q1'46 to Q1'14")
ggplot() + geom_line(aes(date, log.gdp)) + ylab("Log (GDP)") + xlab(NULL) + labs(title = "Log(US GDP) from Q1'46 to Q1'14")
lm(log.gdp ~ date)
8.857e-05
x = 8.857e-05
x
exp(8.857e-05)
exp(0)
time <- 1:length(gdp)
model <- lm(log.gdp ~ time)
model
time
newdata <- data.frame(time = 273)
new
newdata
predict(model, newdata)
predict(model, 278)
model
time
newdata = data.frame(time = 272)
newdata = data.frame(time = 272)
predict(model, newdata)
log.gdp
predict(model, newdata)
time
predict(model, newdata, interval = 'confidence', level = .95)
predict(model, newdata, interval = 'prediction', level = .95)
log.gdp <- log(gdp) # create the log(GDP) variable
ggplot() + geom_line(aes(date, log.gdp)) + ylab("Log(GDP)") + xlab(NULL) + labs(title = "Log(US GDP) from Q1'46 to Q2'14") + stat_smooth(method = 'lm')
log.gdp <- log(gdp) # create the log(GDP) variable
ggplot() + geom_line(aes(date, log.gdp)) + ylab("Log(GDP)") + xlab(NULL) + labs(title = "Log(US GDP) from Q1'46 to Q2'14") + abline(method = 'lm')
model
model.parameters()
model.parameters
model$coefficient
model$coefficient[1]
model$coefficient[2]
intercept <- model$coefficient[1]
slope <- model$coefficient[2]
slope
10 * slope
ggplot() + geom_line(aes(date, log.gdp)) + ylab("Log(GDP)") + xlab(NULL) + labs(title = "Log(US GDP) from Q1'46 to Q2'14") + abline(intercept = intercept, slope = slope)
ggplot() + geom_line(aes(date, log.gdp)) + ylab("Log(GDP)") + xlab(NULL) + labs(title = "Log(US GDP) from Q1'46 to Q2'14") + geom_abline(intercept = intercept, slope = slope)
intercept
int <- model$coefficient[1]
slo <- model$coefficient[2]
slo
ggplot() + geom_line(aes(date, log.gdp)) + ylab("Log(GDP)") + xlab(NULL) + labs(title = "Log(US GDP) from Q1'46 to Q2'14") + geom_abline(intercept = int, slope = slo)
model <- lm(log.gdp ~ time)
model$coefficient[1]
ggplot() + geom_line(aes(date, log.gdp)) + ylab("Log(GDP)") + xlab(NULL) + labs(title = "Log(US GDP) from Q1'46 to Q2'14") + geom_abline(intercept = 7.647331, slope = 0.008087703)
ggplot() + geom_line(aes(date, log.gdp)) + ylab("Log(GDP)") + xlab(NULL) + labs(title = "Log(US GDP) from Q1'46 to Q2'14") + stat_smooth(method = 'lm')
ggplot() + geom_line(aes(date, log.gdp)) + ylab("Log(GDP)") + xlab(NULL) + labs(title = "Log(US GDP) from Q1'46 to Q2'14") + stat_smooth(method = 'lm', se = False)
ggplot() + geom_line(aes(date, log.gdp)) + ylab("Log(GDP)") + xlab(NULL) + labs(title = "Log(US GDP) from Q1'46 to Q2'14") + stat_smooth(method = 'lm', se = FALSE)
ggplot() + geom_line(aes(date, log.gdp)) + ylab("Log(GDP)") + xlab(NULL) + labs(title = "Log(US GDP) from Q1'46 to Q2'14") + geom_abline(intercept = 7.647331)
ggplot() + geom_line(aes(date, log.gdp)) + ylab("Log(GDP)") + xlab(NULL) + labs(title = "Log(US GDP) from Q1'46 to Q2'14") + geom_abline()
ggplot() + geom_line(aes(date, log.gdp)) + ylab("Log(GDP)") + xlab(NULL) + labs(title = "Log(US GDP) from Q1'46 to Q2'14")
ggplot() + geom_line(aes(date, log.gdp)) + ylab("Log(GDP)") + xlab(NULL) + labs(title = "Log(US GDP) from Q1'46 to Q2'14") + geom_abline(intercept = log(7.647331))
ggplot() + geom_line(aes(date, log.gdp)) + ylab("Log(GDP)") + xlab(NULL) + labs(title = "Log(US GDP) from Q1'46 to Q2'14")
ggplot() + geom_line(aes(date, log.gdp))
model(log.gdp ~ time)
lm(log.gdp ~ time)
lm(log.gdp ~ date)
test <- lm(log.gdp ~ date)
ggplot() + geom_line(aes(date, log.gdp)) + ylab("Log(GDP)") + xlab(NULL) + labs(title = "Log(US GDP) from Q1'46 to Q2'14") + geom_abline(intercept = test$coefficient[1]
)
ggplot() + geom_line(aes(time, log.gdp)) + ylab("Log(GDP)") + xlab(NULL) + labs(title = "Log(US GDP) from Q1'46 to Q2'14") + geom_abline(intercept = test$coefficient[1]
)
model
ggplot() + geom_line(aes(time, log.gdp))
ggplot() + geom_line(aes(time, log.gdp)) + geom_abline(intercept = 7.647331)
ggplot() + geom_line(aes(time, log.gdp)) + geom_abline(intercept = 7.647331, slope = 0.008088)
ggplot() + geom_line(aes(time, log.gdp)) + geom_abline(intercept = 7.647331, slope = 0.008088, color = 'red')
ggplot() + geom_line(aes(time, log.gdp)) + geom_abline(intercept = 7.647331, slope = 0.008088, color = 'red', type = '--')
ggplot() + geom_line(aes(time, log.gdp)) + geom_abline(intercept = 7.647331, slope = 0.008088, color = 'red', type = 'o')
ggplot() + geom_line(aes(time, log.gdp)) + geom_abline(intercept = 7.647331, slope = 0.008088, color = 'red')
ggplot() + geom_line(aes(time, log.gdp)) + geom_abline(intercept = 7.647331, slope = 0.008088, color = 'red', linetype = 'dotted')
ggplot() + geom_line(aes(time, log.gdp)) + geom_abline(intercept = 7.647331, slope = 0.008088, color = 'red', linetype = 'dashed')
ggplot() + geom_line(aes(time, log.gdp)) + geom_abline(intercept = 7.647331, slope = 0.008088, color = 'red', linetype = 'dashed')
ggplot() + geom_line(aes(date, log.gdp)) + geom_abline(intercept = 7.647331, slope = 0.008088, color = 'red', linetype = 'dashed')
lm(log.gdp ~ date)
ggplot() + geom_line(aes(date, log.gdp)) + geom_abline(intercept = 8.400e+00 , slope = 8.857e-05, color = 'red', linetype = 'dashed')
ggplot() + geom_line(aes(date, log.gdp)) + geom_abline(intercept = 8.400e+00 , slope = 8.857e-05, color = 'red', linetype = 'dashed') + ylab("Log(GDP)") + xlab(NULL) + labs(title = "Log(US GDP) with Model")
model
model <- lm(log.gdp ~ time)
residual(model)
residuals(model)
res <- residuals(model)
ggplot() + geom_point(aes(time, res))
ggplot() + geom_point(aes(time, res)) + labs(title = "Residuals Over Time") + ylab("Residuals") + xlab(NULL)
ggplot() + geom_point(aes(time, res), colour = 'red') + labs(title = "Residuals Over Time") + ylab("Residuals") + xlab(NULL)
data <- read.csv("http://ptrckprry.com/course/forecasting/data/euro.csv")
date <- as.Date(data$date)
euro <- data$euro
data <- read.csv("http://ptrckprry.com/course/forecasting/data/euro.csv")
date <- as.Date(data$date)
euro <- data$euro
euro <- data$euro
ggplot() + geom_line(aes(date, euro))
ggplot() + geom_line(aes(date, euro)) + xlab(NULL) + ylab(USD/Euro)
ggplot() + geom_line(aes(date, euro)) + xlab(NULL) + ylab("USD/Euro")
ggplot() + geom_line(aes(date, euro)) + xlab(NULL) + ylab("USD/Euro Rate")
ggplot() + geom_line(aes(date, euro)) + xlab(NULL) + ylab("USD/Euro Rate") + lab(title = "U.S. Dollar-Euro Exchange Rate")
ggplot() + geom_line(aes(date, euro)) + xlab(NULL) + ylab("USD/Euro Rate") + labs(title = "U.S. Dollar-Euro Exchange Rate")
ggplot() + geom_line(aes(date, euro)) + xlab(NULL) + ylab("Rate") + labs(title = "U.S. Dollar-Euro Exchange Rate")
data
data[1:10]
data[[1:10]]
euro
time
time <- 1:length(euro)
time
euro
euro
length(euro)
length(time)
model <- lm(euro[1:700] ~ time[1:700])
newdata <- data.frame(time = 4116)
predict(model, newdata)
predict(newdata, model)
model
predict(model, newdata)
model
newdata <- data.frame(time = 4116)
predict(model, newdata)
#model1 <- lm(euro ~ time, subset=1:700)
model1 <- lm(euro ~ time, subset=1:700)
model
model1
summary(model1)
predict(model1, newdata)
ggplot() + geom_line(aes(time, euro))
ggplot() + geom_line(aes(time, euro)) + geom_line(model1)
ggplot() + geom_line(aes(time, euro)) + geom_abline(model1)
ggplot() + geom_line(aes(time, euro)) + geom_abline()
ggplot() + geom_line(aes(time, euro)) + geom_abline(intercept = 1.104e+00)
ggplot() + geom_line(aes(time, euro)) + geom_abline(intercept = 1.104e+00, slope = -3.873e-04)
predict(model1, newdata)
models
model1
plot(time, euro, t="l")
abline(model1, lty=2)
abline(model2, lty=3)
model2 <- lm(euro ~ time, subset=701:4115)
abline(model2, lty=3)
ggplot() + geom_line(aes(time, euro)) + geom_abline(intercept = 1.104e+00, slope = -3.873e-04, color = 'red')
ggplot() + geom_line(aes(time, euro)) + geom_abline(intercept = 1.104e+00, slope = -3.873e-04, color = 'red', linetype = 'dashed')
ggplot() + geom_line(aes(time, euro)) + geom_abline(intercept = 1.104e+00, slope = -3.873e-04, color = 'red', linetype = 'dashed') +
0
model2
ggplot() + geom_line(aes(time, euro)) + geom_abline(intercept = 1.104e+00, slope = -3.873e-04, color = 'red', linetype = 'dashed') + geom_abline(intercept = 1.054e+00, slope = 9.265e-05, color = 'blue', linetype = 'dotted')
ggplot() + geom_line(aes(time, euro)) + geom_abline(intercept = 1.104e+00, slope = -3.873e-04, color = 'red', linetype = 'dashed') + geom_abline(intercept = 1.054e+00, slope = 9.265e-05, color = 'blue', linetype = 'dotted', size = 3)
ggplot() + geom_line(aes(time, euro)) + geom_abline(intercept = 1.104e+00, slope = -3.873e-04, color = 'red', linetype = 'dashed') + geom_abline(intercept = 1.054e+00, slope = 9.265e-05, color = 'blue', linetype = 'dotted', size = 2)
ggplot() + geom_line(aes(time, euro)) + geom_abline(intercept = 1.104e+00, slope = -3.873e-04, color = 'red', linetype = 'dashed', size = 2) + geom_abline(intercept = 1.054e+00, slope = 9.265e-05, color = 'blue', linetype = 'dotted', size = 2)
ggplot() + geom_line(aes(time, euro)) + geom_abline(intercept = 1.104e+00, slope = -3.873e-04, color = 'red', linetype = 'dashed', size = 1.2) + geom_abline(intercept = 1.054e+00, slope = 9.265e-05, color = 'blue', linetype = 'dotted', size =5 1.25)
ggplot() + geom_line(aes(time, euro)) + geom_abline(intercept = 1.104e+00, slope = -3.873e-04, color = 'red', linetype = 'dashed', size = 1.25) + geom_abline(intercept = 1.054e+00, slope = 9.265e-05, color = 'blue', linetype = 'dotted', size = 1.25)
ggplot() + geom_line(aes(time, euro)) + geom_abline(intercept = 1.104e+00, slope = -3.873e-04, color = 'red', linetype = 'dashed', size = 1.25) + geom_abline(intercept = 1.054e+00, slope = 9.265e-05, color = 'blue', linetype = 'dotted', size = 1.25, show_guide = TRUE)
ggplot() + geom_line(aes(time, euro)) + geom_abline(intercept = 1.104e+00, slope = -3.873e-04, color = 'red', linetype = 'dashed', size = 1.25) + geom_abline(intercept = 1.054e+00, slope = 9.265e-05, color = 'blue', linetype = 'dotted', size = 1.25) + scale_colour_manual("", breaks = c('Data', 'Model1', 'Model2'), values = c('black', 'red', 'blue'))
ggplot() + geom_line(aes(time, euro)) + geom_abline(intercept = 1.104e+00, slope = -3.873e-04, color = 'red', linetype = 'dashed', size = 1.25, show_guide = TRUE) + geom_abline(intercept = 1.054e+00, slope = 9.265e-05, color = 'blue', linetype = 'dotted', size = 1.25, show_guide = TRUE) + scale_colour_manual("", breaks = c('Data', 'Model1', 'Model2'), values = c('black', 'red', 'blue'))
scale_colour_manual("", breaks = c('Data', 'Model1', 'Model2'), values = c('black', 'red', 'blue'))
ggplot() + geom_line(aes(time, euro)) +
geom_abline(intercept = 1.104e+00, slope = -3.873e-04, color = 'red', linetype = 'dashed', size = 1.25) +
geom_abline(intercept = 1.054e+00, slope = 9.265e-05, color = 'blue', linetype = 'dotted', size = 1.25) +
scale_colour_manual("", breaks = c('Data', 'Model1', 'Model2'), values = c('black', 'red', 'blue'))
scale_linetype_manual("", breaks = c('Model1', 'Model2'), values = c('red', 'blue'))
ggplot() + geom_line(aes(time, euro)) +
geom_abline(intercept = 1.104e+00, slope = -3.873e-04, color = 'red', linetype = 'dashed', size = 1.25) +
geom_abline(intercept = 1.054e+00, slope = 9.265e-05, color = 'blue', linetype = 'dotted', size = 1.25) +
scale_linetype_manual("", values = c('red', 'blue'))
ggplot() + geom_line(aes(time, euro)) +
geom_abline(intercept = 1.104e+00, slope = -3.873e-04, color = 'red', linetype = 'dashed', size = 1.25) +
geom_abline(intercept = 1.054e+00, slope = 9.265e-05, color = 'blue', linetype = 'dotted', size = 1.25) +
scale_linetype_manual("", breaks = c('Model1', 'Model2')) #, values = c('red', 'blue'))
scale_linetype_manual("", values = c('Model1', 'Model2')) #, values = c('red', 'blue'))
scale_linetype_manual("", breaks = c('Model1', 'Model2'), values = c('red', 'blue'))
scale_linetype_manual("", values = c('red', 'blue'))
scale_linetype_manual("", values = c('red', 'blue'))
ggplot() + geom_line(aes(time, euro)) +
geom_abline(intercept = 1.104e+00, slope = -3.873e-04, color = 'red', linetype = 'dashed', size = 1.25) +
geom_abline(intercept = 1.054e+00, slope = 9.265e-05, color = 'blue', linetype = 'dotted', size = 1.25) +
scale_linetype_manual("", values = c('red', 'blue'))
ggplot() + geom_line(aes(time, euro, color = 'lineName' )) +
geom_abline(intercept = 1.104e+00,
slope = -3.873e-04, color = 'red', linetype = 'dashed', size = 1.25) +
geom_abline(intercept = 1.054e+00,
slope = 9.265e-05, color = 'blue', linetype = 'dotted', size = 1.25) +
scale_color_manual("", values = c('lineName', 'red', 'blue'))
scale_color_manual("", values = c('black', 'red', 'blue'))
ggplot() + geom_line(aes(time, euro, color = 'black' )) +
geom_abline(intercept = 1.104e+00,
slope = -3.873e-04, color = 'red', linetype = 'dashed', size = 1.25) +
geom_abline(intercept = 1.054e+00,
slope = 9.265e-05, color = 'blue', linetype = 'dotted', size = 1.25)
ggplot() + geom_line(aes(time, euro, color = 'bl' )) +
geom_abline(intercept = 1.104e+00,
slope = -3.873e-04, color = 'red', linetype = 'dashed', size = 1.25) +
geom_abline(intercept = 1.054e+00,
slope = 9.265e-05, color = 'blue', linetype = 'dotted', size = 1.25)
ggplot() + geom_line(aes(time, euro)) +
geom_abline(intercept = 1.104e+00,
slope = -3.873e-04, color = 'red', linetype = 'dashed', size = 1.25) +
geom_abline(intercept = 1.054e+00,
slope = 9.265e-05, color = 'blue', linetype = 'dotted', size = 1.25)
cols <- c("line1" = "black", "line2" = "red", "line3" = "blue")
ggplot() + geom_line(aes(time, euro)) +
geom_abline(intercept = 1.104e+00,
slope = -3.873e-04, color = 'line2', size = 1.25) +
geom_abline(intercept = 1.054e+00,
slope = 9.265e-05, color = 'line3', size = 1.25)
cols
line2
cols$line2
type(col)
col
str(col)
ggplot() + geom_line(aes(time, euro)) +
geom_abline(intercept = 1.104e+00,
slope = -3.873e-04, color = 'red', size = 1.25) +
geom_abline(intercept = 1.054e+00,
slope = 9.265e-05, color = 'blue', size = 1.25)
ggplot() + geom_line(aes(time, euro)) +
geom_abline(intercept = 1.104e+00,
slope = -3.873e-04, color = 'red', size = 1) +
geom_abline(intercept = 1.054e+00,
slope = 9.265e-05, color = 'blue', size = 1)
ggplot() + geom_line(aes(time, euro), color = 'line1') +
geom_abline(intercept = 1.104e+00,
slope = -3.873e-04, color = 'line2', size = 1) +
geom_abline(intercept = 1.054e+00,
slope = 9.265e-05, color = 'line3', size = 1) +
scale_color_manual(name = "test", values= cols)
cols <- c("line1" = "black", "line2" = "red", "line3" = "blue")
ggplot() + geom_line(aes(time, euro, color = 'line1')) +
geom_abline(intercept = 1.104e+00,
slope = -3.873e-04, color = 'line2', size = 1) +
geom_abline(intercept = 1.054e+00,
slope = 9.265e-05, color = 'line3', size = 1) +
scale_color_manual(name = "test", values= cols)
cols <- c("line1" = "black", "line2" = "red", "line3" = "blue")
ggplot() + geom_line(aes(time, euro, colour = 'line1')) +
geom_abline(intercept = 1.104e+00,
slope = -3.873e-04, colour = 'line2', size = 1) +
geom_abline(intercept = 1.054e+00,
slope = 9.265e-05, colour = 'line3', size = 1) +
scale_colour_manual(name = "test", values= cols)
ggplot() + geom_line(aes(time, euro, colour = 'line1')) +
geom_abline(aes(colour = 'line2'), intercept = 1.104e+00,
slope = -3.873e-04, size = 1) +
geom_abline(aes(colour = 'line3'), intercept = 1.054e+00,
slope = 9.265e-05, colour = 'line3', size = 1) +
scale_colour_manual(name = "test", values= cols)
ggplot() + geom_line(aes(time, euro, colour = 'line1')) +
geom_abline(aes(colour = 'line2'), intercept = 1.104e+00,
slope = -3.873e-04, size = 1) +
geom_abline(aes(colour = 'line3'), intercept = 1.054e+00,
slope = 9.265e-05,  size = 1) +
scale_colour_manual(name = "test", values= cols)
ggplot() + geom_line(aes(time, euro, colour = 'line1')) +
geom_abline(aes(colour = 'line2'), intercept = 1.104e+00,
slope = -3.873e-04, size = 1) +
geom_abline(aes(colour = 'line3'), intercept = 1.054e+00,
slope = 9.265e-05,  size = 1) +
scale_colour_manual(name = "Legend", breaks = c('Data', 'Model1', 'Model2'), values= cols)
ggplot() + geom_line(aes(time, euro, colour = 'line1')) +
geom_abline(aes(colour = 'line2'), intercept = 1.104e+00,
slope = -3.873e-04, size = 1) +
geom_abline(aes(colour = 'line3'), intercept = 1.054e+00,
slope = 9.265e-05,  size = 1) +
scale_colour_manual(name = "Legend", values= cols)
cols <- c("Actual" = "black", "Fit to 1-700" = "red", "Fit to 701-4115" = "blue")
ggplot() + geom_line(aes(time, euro, colour = 'line1')) +
geom_abline(aes(colour = 'line2'), intercept = 1.104e+00,
slope = -3.873e-04, size = 1) +
geom_abline(aes(colour = 'line3'), intercept = 1.054e+00,
slope = 9.265e-05,  size = 1) +
scale_colour_manual(name = "Legend", values= cols)
cols <- c("Actual" = "black", "Fit to 1-700" = "red", "Fit to 701-4115" = "blue")
ggplot() + geom_line(aes(time, euro, colour = 'line1')) +
geom_abline(aes(colour = "Fit to 1-700"), intercept = 1.104e+00,
slope = -3.873e-04, size = 1) +
geom_abline(aes(colour = "Fit to 701-4115"), intercept = 1.054e+00,
slope = 9.265e-05,  size = 1) +
scale_colour_manual(name = "Legend", values= cols)
cols <- c("Actual" = "black", "Fit to 1-700" = "red", "Fit to 701-4115" = "blue")
ggplot() + geom_line(aes(time, euro, colour = 'Actual')) +
geom_abline(aes(colour = "Fit to 1-700"), intercept = 1.104e+00,
slope = -3.873e-04, size = 1) +
geom_abline(aes(colour = "Fit to 701-4115"), intercept = 1.054e+00,
slope = 9.265e-05,  size = 1) +
scale_colour_manual(name = "Legend", values= cols)
cols <- c("Actual" = "black", "Fit to 1-700" = "red", "Fit to 701-4115" = "blue")
ggplot() + geom_line(aes(time, euro, colour = 'Actual')) +
geom_abline(aes(colour = "Fit to 1-700"), intercept = 1.104e+00,
slope = -3.873e-04, size = 1, linetype = 'dotted') +
geom_abline(aes(colour = "Fit to 701-4115"), intercept = 1.054e+00,
slope = 9.265e-05,  size = 1) +
scale_colour_manual(name = "Legend", values= cols. linetype = 'dashed')
cols <- c("Actual" = "black", "Fit to 1-700" = "red", "Fit to 701-4115" = "blue")
ggplot() + geom_line(aes(time, euro, colour = 'Actual')) +
geom_abline(aes(colour = "Fit to 1-700"), intercept = 1.104e+00,
slope = -3.873e-04, size = 1, linetype = 'dotted') +
geom_abline(aes(colour = "Fit to 701-4115"), intercept = 1.054e+00,
slope = 9.265e-05,  size = 1) +
scale_colour_manual(name = "Legend", values= cols, linetype = 'dashed')
ggplot() + geom_line(aes(time, euro, colour = 'Actual')) +
geom_abline(aes(colour = "Fit to 1-700"), intercept = 1.104e+00,
slope = -3.873e-04, size = 1, linetype = 'dotted') +
geom_abline(aes(colour = "Fit to 701-4115"), intercept = 1.054e+00,
slope = 9.265e-05,  size = 1, linetype = 'dashed') +
scale_colour_manual(name = "Legend", values= cols)
ggplot() + geom_line(aes(time, euro, colour = 'Actual')) +
geom_abline(aes(colour = "Fit to 1-700"), intercept = 1.104e+00,
slope = -3.873e-04, size = 1, linetype = 'dashed') +
geom_abline(aes(colour = "Fit to 701-4115"), intercept = 1.054e+00,
slope = 9.265e-05,  size = 1, linetype = 'dashed') +
scale_colour_manual(name = "Legend", values= cols)
cols <- c("Actual" = "black", "Fit to 1-700" = "red", "Fit to 701-4115" = "blue")
ggplot() + geom_line(aes(time, euro, colour = 'Actual'), alpha = .5) +
geom_abline(aes(colour = "Fit to 1-700"), intercept = 1.104e+00,
slope = -3.873e-04, size = 1, linetype = 'dashed') +
geom_abline(aes(colour = "Fit to 701-4115"), intercept = 1.054e+00,
slope = 9.265e-05,  size = 1, linetype = 'dashed') +
scale_colour_manual(name = "Legend", values= cols)
ggplot() + geom_line(aes(time, euro, colour = 'Actual'), alpha = .75) +
geom_abline(aes(colour = "Fit to 1-700"), intercept = 1.104e+00,
slope = -3.873e-04, size = 1, linetype = 'dashed') +
geom_abline(aes(colour = "Fit to 701-4115"), intercept = 1.054e+00,
slope = 9.265e-05,  size = 1, linetype = 'dashed') +
scale_colour_manual(name = "Legend", values= cols)
ggplot() + geom_line(aes(time, euro, colour = 'Actual'), alpha = .75) +
geom_abline(aes(colour = "Fit to 1-700"), intercept = 1.104e+00,
slope = -3.873e-04, size = 1, linetype = 'dashed') +
geom_abline(aes(colour = "Fit to 701-4115"), intercept = 1.054e+00,
slope = 9.265e-05,  size = 1, linetype = 'dashed') +
scale_colour_manual(name = "Legend", values= cols) +
xlab(NULL) + ylab("Rate")
ggplot() + geom_line(aes(time, euro, colour = 'Actual'), alpha = .75) +
geom_abline(aes(colour = "Fit to 1-700"), intercept = 1.104e+00,
slope = -3.873e-04, size = 1, linetype = 'dashed') +
geom_abline(aes(colour = "Fit to 701-4115"), intercept = 1.054e+00,
slope = 9.265e-05,  size = 1, linetype = 'dashed') +
scale_colour_manual(name = "Legend", values= cols) +
xlab(NULL) + ylab("Rate") + labs(title = 'Actual Data with Models 1 & 2')
cols <- c("Actual" = "black", "Fit to 1-700" = "red", "Fit to 701-4115" = "blue")
ggplot() + geom_line(aes(time, euro, colour = 'Actual'), alpha = .75) +
geom_abline(aes(colour = "Fit to 1-700"), intercept = 1.104e+00,
slope = -3.873e-04, size = 1, linetype = 'dashed') +
geom_abline(aes(colour = "Fit to 701-4115"), intercept = 1.054e+00,
slope = 9.265e-05,  size = 1, linetype = 'dashed') +
scale_colour_manual(name = "Legend", values= cols) +
xlab(NULL) + ylab("Rate") + labs(title = 'Actual Data with Models 1 & 2') +
theme(legend.position = "bottom")
cols <- c("Actual" = "black", "Fit to 1-700" = "red", "Fit to 701-4115" = "blue")
ggplot() + geom_line(aes(time, euro, colour = 'Actual'), alpha = .75) +
geom_abline(aes(colour = "Fit to 1-700"), intercept = 1.104e+00,
slope = -3.873e-04, size = 1, linetype = 'dashed') +
geom_abline(aes(colour = "Fit to 701-4115"), intercept = 1.054e+00,
slope = 9.265e-05,  size = 1, linetype = 'dashed') +
scale_colour_manual(name = "Legend", values= cols) +
xlab(NULL) + ylab("Rate") + labs(title = 'Actual Data with Models 1 & 2') +
theme(legend.position = "bottom")
ggplot() + geom_line(aes(time, euro, colour = 'Actual'), alpha = .75) +
geom_abline(aes(colour = "Fit to 1-700"), intercept = 1.104e+00,
slope = -3.873e-04, size = 1, linetype = 'dashed') +
geom_abline(aes(colour = "Fit to 701-4115"), intercept = 1.054e+00,
slope = 9.265e-05,  size = 1, linetype = 'dashed') +
scale_colour_manual(name = "Legend", values= cols) +
xlab(NULL) + ylab("Rate") + labs(title = 'Actual Data with Models 1 & 2') +
theme(legend.position = "bottom")
